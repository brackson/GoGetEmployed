package models

import (
	// "errors"
	// "log"
	// "time"

	// "github.com/satori/go.uuid"
	"GoGetEmployed/db"
	// "github.com/vsouza/go-gin-boilerplate/forms"
)

type Job struct {
	job_id			string
	company_name	string
	url				string
	description		string
	notes			string
	status_id		int64
}

// func (h User) Signup(userPayload forms.UserSignup) (*User, error) {
// 	db := db.GetDB()
// 	// id := uuid.NewV4()
// 	user := User{
// 		ID:        id.String(),
// 		Name:      userPayload.Name,
// 		BirthDay:  userPayload.BirthDay,
// 		Gender:    userPayload.Gender,
// 		PhotoURL:  userPayload.PhotoURL,
// 		Time:      time.Now().UnixNano(),
// 		Active:    true,
// 		UpdatedAt: time.Now().UnixNano(),
// 	}
// 	item, err := dynamodbattribute.MarshalMap(user)
// 	if err != nil {
// 		errors.New("error when try to convert user data to dynamodbattribute")
// 		return nil, err
// 	}
// 	params := &dynamodb.PutItemInput{
// 		Item:      item,
// 		TableName: aws.String("TableUsers"),
// 	}
// 	if _, err := db.PutItem(params); err != nil {
// 		log.Println(err)
// 		return nil, errors.New("error when try to save data to database")
// 	}
// 	return &user, nil
// }
//
func (h Job) GetAllJobs(b *[]Job) {
	db := db.GetDB()
	db.Find(b)
	return
}
